if("${CMAKE_SOURCE_ROOT_DIR}" STREQUAL "")
	if(CMAKE_VERSION VERSION_GREATER "3.20")
		cmake_path(GET CMAKE_CURRENT_SOURCE_DIR PARENT_PATH CMAKE_SOURCE_ROOT_DIR)
	else()
		get_filename_component(CMAKE_SOURCE_ROOT_DIR ${CMAKE_CURRENT_SOURCE_DIR} PATH )
	endif()
endif()

set(CMAKE_CURRENT_INCLUDE_DIR ${CMAKE_SOURCE_ROOT_DIR}/include)
set(TARGET ${PROJECT_LIBRARY_HASH})

if(CMAKE_BUILD_TYPE STREQUAL "Debug")
	message(STATUS CMAKE_VERSION=${CMAKE_VERSION})
	message(STATUS CMAKE_CURRENT_INCLUDE_DIR=${CMAKE_CURRENT_INCLUDE_DIR})
	message(STATUS CMAKE_CURRENT_SOURCE_DIR=${CMAKE_CURRENT_SOURCE_DIR})
endif()

if(MSVC)
	set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS ON)
endif()

# 이 프로젝트의 실행 파일에 소스를 추가합니다.
add_library(${TARGET} STATIC "Fnv1A.cpp" "Jenkins06.cpp" "Jenkins96.cpp" "OneAtATime.cpp" "SuperFast.cpp" "Crc32.cpp" "GeneralizedCrc.cpp")
target_include_directories(${TARGET} PUBLIC ${CMAKE_CURRENT_INCLUDE_DIR})
target_compile_options(${TARGET} PRIVATE -Wall)

if(CMAKE_VERSION VERSION_GREATER 3.12)
	set_property(TARGET ${TARGET} PROPERTY CXX_STANDARD 20)
endif()